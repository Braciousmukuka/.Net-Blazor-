@using Lima.Businuess
@inject IViewInventory ViewInventory

<div class="input-group">
    <input type="text"
        class="form-control form-control-lg"
        placeholder="Search inventory by name"
        @bind-value="SearchName"
        @bind-value:event="oninput"/>
        <br/>
        <button type="button" class="input-group-text btn-primary"
        @onclick="@(async()=>{await ViewInventories();})">View All</button>
</div>

@if(this.DisplaySearchResult && _inventories != null && selectedInventory == null)
{
    <div style="overflow-y:auto; max-height : 300px; border:1px solid blue">
        <ul style="list-style-type:none">
            @foreach(var inv in _inventories)
            {
                <li style="cursor:pointer"@onclick="@(async() => {await SelectInventory(inv);})"
                    @key = "inv.InventoryId">@inv.InventoryName</li>
            }
        </ul>
    </div>

}
@code {
    private string? _SearchName;
    public string? SearchName
    {
        get=> _SearchName; 
        set
        {
            _SearchName = value;
            if(!string.IsNullOrWhiteSpace(_SearchName) && 
                _SearchName.Length > 2)
            {
                ViewInventories();
            }
        }
    }


    private List<Inventory>? _inventories;
    private Inventory? selectedInventory;

    [Parameter]
    public EventCallback<List<Inventory>> OnSearchInventories{ get; set; }

    [Parameter]
    public EventCallback<Inventory> OnSelectInventory { get; set; }

    [Parameter]
    public bool DisplaySearchResult { get; set; } = false;

    private async Task ViewInventories()
    {
        var inventories = (await ViewInventory
            .ExecuteAsync(SearchName ?? string.Empty))?.ToList();

        await OnSearchInventories.InvokeAsync(inventories);
        _inventories = inventories;
        this.selectedInventory = null;

        StateHasChanged();
    }

    private async Task SelectInventory(Inventory inventory)
    {
        await OnSelectInventory.InvokeAsync(inventory);
        selectedInventory = inventory;
    }
}
