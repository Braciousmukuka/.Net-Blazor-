@page "/addproduct"

@inject IAddProduct AddP
@inject NavigationManager Navman
@attribute [Authorize]


<h3>Add Products</h3>
<br/>
@if(this.product != null)
{
    <EditForm Model="product" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        
        <div class="form-group">
            <lable for="name">Product Name</lable>
            <InputText id="name" @bind-Value="product.ProductName" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <lable for="type">Product Type</lable>
            <InputText id="type" @bind-Value="product.ProductType" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <lable for="desc">Product Description</lable>
            <InputText id="desc" @bind-Value="product.ProductDescription" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <lable for="qty">Product Quantity</lable>
            <InputNumber id="qty" @bind-Value="product.Quantity" class="form-control"></InputNumber>
        </div>
        <div class="form-group">
            <lable for="price">Unit Price</lable>
            <InputNumber id="price" @bind-Value="product.Price" class="form-control"></InputNumber>
        </div>
        <ProductInventoriesComponent 
                @ref="ProductInventoriesComponent" 
                OnInventorySelected="OnInventorySelected"
            ></ProductInventoriesComponent>
        <br/>
        <button type="submit" class="btn btn-primary">Save</button>

    </EditForm>
}


@code {
    private Product? product;

    private ProductInventoriesComponent ProductInventoriesComponent;

    protected override void OnInitialized()
    {
        this.product = new Product();
    }
    private async Task OnValidSubmit()
    {
        if(this.product != null)
        {
            this.ProductInventoriesComponent.productInventories.ForEach(x => {

                x.ProductId = this.product.ProductId;
            });

            this.product.productInventories = this.ProductInventoriesComponent.productInventories;

            await AddP.ExecuteAsync(this.product);
            Navman.NavigateTo("/products");
        }
    }

    private void OnInventorySelected(List<ProductInventory> productInventories)
    {
        this.product.productInventories = productInventories;
    }
}
