@page "/purchase"

@attribute [Authorize]

@inject IPurchaseInventory PInv

@inject NavigationManager NavMan

@using LIMA.ViewModels
<h3>Purchase Inventory</h3>
<br/>

@if(purchaseViewModel != null){
<EditForm Model="purchaseViewModel" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    
    <div class="form-group">
            <label for = "po">Purchase Order</label>
            <InputText id="po" @bind-Value="purchaseViewModel.PurchaseOrder" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <label for="inv">Inventory To Purchase</label>
            <ViewInventoriesComponent 
                OnSelectInventory="OnSelectInventory"
                DisplaySearchResult="true"></ViewInventoriesComponent>
                <InputText id="inv" class="form-control" @bind-Value="purchaseViewModel.InventoryName" disabled></InputText>
                <input type="hidden" value="@purchaseViewModel.InventoryId"/>
            @if(purchaseViewModel != null)
            {
                <text>Unit Price: K</text>
                @selectedInventory?.Price.ToString()
            }
       </div>
        <div class="form-group">
            <label for = "qty">Quantity</label>
            <InputNumber id="qty" @bind-Value="purchaseViewModel.QuantityToPurchase" class="form-control"></InputNumber>
        </div>
        <br/>
        <button type="submit" class="btn btn-primary">Purchase</button>
</EditForm>
 }

@code {
    private PurchaseViewModel purchaseViewModel = new PurchaseViewModel();
    private Inventory selectedInventory;

    private void OnSelectInventory(Inventory inventory)
    {
        this.selectedInventory = inventory;
        purchaseViewModel.InventoryId = inventory.InventoryId;
        purchaseViewModel.InventoryName = inventory.InventoryName;
    }
    private async Task OnValidSubmit()
    {
        await PInv.ExecuteAsync(
            this.purchaseViewModel.PurchaseOrder,
            this.selectedInventory,
            this.purchaseViewModel.QuantityToPurchase,
            "Bracious Mukuka"
         );
        NavMan.NavigateTo("/inventories");

    }

}
